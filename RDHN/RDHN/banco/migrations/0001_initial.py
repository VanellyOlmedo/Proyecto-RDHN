# Generated by Django 5.2.7 on 2025-10-14 21:57

import django.core.validators
import django.utils.timezone
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CuentaAhorro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_cuenta', models.CharField(db_index=True, max_length=20, unique=True)),
                ('saldo_actual', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('monto_deduccion_planilla', models.DecimalField(blank=True, decimal_places=2, help_text='Monto a deducir de planilla mensualmente', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('fecha_apertura', models.DateField(default=django.utils.timezone.now)),
                ('fecha_cierre', models.DateField(blank=True, null=True)),
                ('observaciones', models.TextField(blank=True, null=True)),
                ('creado_en', models.DateTimeField(auto_now_add=True)),
                ('actualizado_en', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Cuenta de Ahorro',
                'verbose_name_plural': 'Cuentas de Ahorro',
                'db_table': 'CUENTA_AHORRO',
            },
        ),
        migrations.CreateModel(
            name='CuotaPrestamo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_cuota', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('monto_cuota', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('monto_capital', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('monto_interes', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('monto_mora', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('saldo_pendiente', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('fecha_vencimiento', models.DateField(db_index=True)),
                ('fecha_pago', models.DateField(blank=True, null=True)),
                ('dias_mora', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('estado', models.CharField(choices=[('PENDIENTE', 'Pendiente'), ('PAGADA', 'Pagada'), ('VENCIDA', 'Vencida'), ('PAGADA_TARDE', 'Pagada con Retraso')], db_index=True, default='PENDIENTE', max_length=20)),
                ('creado_en', models.DateTimeField(auto_now_add=True)),
                ('actualizado_en', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Cuota de Préstamo',
                'verbose_name_plural': 'Cuotas de Préstamos',
                'db_table': 'CUOTA_PRESTAMO',
                'ordering': ['prestamo', 'numero_cuota'],
            },
        ),
        migrations.CreateModel(
            name='Dividendo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('saldo_promedio_fijo', models.DecimalField(decimal_places=2, help_text='Saldo promedio en cuenta fija durante el período', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('cantidad_prestamos', models.IntegerField(default=0, help_text='Cantidad de préstamos activos durante el año', validators=[django.core.validators.MinValueValidator(0)])),
                ('cumple_requisito', models.BooleanField(default=False, help_text='¿Cumplió con mínimo 2 préstamos?')),
                ('porcentaje_asignado', models.DecimalField(decimal_places=2, help_text='% del total de dividendos', max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('100.00'))])),
                ('monto_dividendo', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('fecha_acreditacion', models.DateField(blank=True, null=True)),
                ('acreditado', models.BooleanField(default=False)),
                ('creado_en', models.DateTimeField(auto_now_add=True)),
                ('actualizado_en', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Dividendo',
                'verbose_name_plural': 'Dividendos',
                'db_table': 'DIVIDENDO',
            },
        ),
        migrations.CreateModel(
            name='FondoMutuo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('periodo', models.CharField(db_index=True, help_text='Formato: YYYYMM', max_length=6, unique=True, validators=[django.core.validators.RegexValidator(message='El período debe tener formato YYYYMM (ejemplo: 202401)', regex='^\\d{6}$')])),
                ('total_ingresos', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total de aportes recibidos en el período', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('total_egresos', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total de ayudas otorgadas en el período', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('saldo_disponible', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Saldo disponible para ayudas', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('fecha_inicio', models.DateField()),
                ('fecha_fin', models.DateField()),
                ('fecha_cierre', models.DateField(blank=True, null=True)),
                ('observaciones', models.TextField(blank=True, null=True)),
                ('creado_en', models.DateTimeField(auto_now_add=True)),
                ('actualizado_en', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Fondo Mutuo',
                'verbose_name_plural': 'Fondos Mutuos',
                'db_table': 'FONDO_MUTUO',
                'ordering': ['-periodo'],
            },
        ),
        migrations.CreateModel(
            name='Garante',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_aceptacion', models.DateField(default=django.utils.timezone.now)),
                ('documento_garante', models.FileField(blank=True, null=True, upload_to='prestamos/garantes/')),
                ('activo', models.BooleanField(default=True)),
                ('creado_en', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Garante',
                'verbose_name_plural': 'Garantes',
                'db_table': 'GARANTE',
            },
        ),
        migrations.CreateModel(
            name='MovimientoFondoMutuo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('origen', models.CharField(choices=[('INGRESO', 'Ingreso/Aporte'), ('EGRESO', 'Egreso/Ayuda'), ('AJUSTE', 'Ajuste'), ('CIERRE', 'Cierre de Período'), ('APERTURA', 'Saldo de Apertura')], db_index=True, max_length=20)),
                ('tipo_aporte', models.CharField(blank=True, choices=[('MENSUAL', 'Aporte Mensual'), ('EXTRAORDINARIO', 'Aporte Extraordinario'), ('DONACION', 'Donación')], help_text='Aplica solo para INGRESOS', max_length=20, null=True)),
                ('monto', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('saldo_anterior', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('saldo_nuevo', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('concepto', models.CharField(max_length=200)),
                ('observaciones', models.TextField(blank=True, null=True)),
                ('numero_movimiento', models.CharField(db_index=True, help_text='Número único del movimiento para comprobante', max_length=20, unique=True)),
                ('fecha_movimiento', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('creado_en', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Movimiento de Fondo Mutuo',
                'verbose_name_plural': 'Movimientos de Fondo Mutuo',
                'db_table': 'MOVIMIENTO_FONDO_MUTUO',
                'ordering': ['-fecha_movimiento'],
            },
        ),
        migrations.CreateModel(
            name='Notificacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('CUOTA_PROXIMA', 'Cuota Próxima a Vencer'), ('CUOTA_VENCIDA', 'Cuota Vencida'), ('DEPOSITO', 'Depósito Realizado'), ('RETIRO', 'Retiro Realizado'), ('PAGO_PRESTAMO', 'Pago de Préstamo'), ('PRESTAMO_APROBADO', 'Préstamo Aprobado'), ('PRESTAMO_RECHAZADO', 'Préstamo Rechazado'), ('DIVIDENDO', 'Dividendo Acreditado'), ('ALERTA', 'Alerta General')], db_index=True, max_length=30)),
                ('canal', models.CharField(choices=[('EMAIL', 'Email'), ('SMS', 'SMS'), ('NOTIFICACION_APP', 'Notificación en App'), ('WHATSAPP', 'WhatsApp')], db_index=True, default='EMAIL', max_length=20)),
                ('prioridad', models.CharField(choices=[('BAJA', 'Baja'), ('NORMAL', 'Normal'), ('ALTA', 'Alta'), ('URGENTE', 'Urgente')], db_index=True, default='NORMAL', max_length=10)),
                ('asunto', models.CharField(max_length=200)),
                ('mensaje', models.TextField()),
                ('enviado', models.BooleanField(db_index=True, default=False)),
                ('fecha_envio', models.DateTimeField(blank=True, null=True)),
                ('intentos', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('ultimo_error', models.TextField(blank=True, null=True)),
                ('programada_para', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('creado_en', models.DateTimeField(auto_now_add=True)),
                ('actualizado_en', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Notificación',
                'verbose_name_plural': 'Notificaciones',
                'db_table': 'NOTIFICACION',
                'ordering': ['-creado_en'],
            },
        ),
        migrations.CreateModel(
            name='PagoPrestamo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('monto_pagado', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('monto_capital', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('monto_interes', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('monto_mora', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('fecha_pago', models.DateField(db_index=True, default=django.utils.timezone.now)),
                ('numero_recibo', models.CharField(db_index=True, max_length=20, unique=True)),
                ('metodo_pago', models.CharField(choices=[('EFECTIVO', 'Efectivo'), ('TRANSFERENCIA', 'Transferencia'), ('PLANILLA', 'Deducción de Planilla'), ('CHEQUE', 'Cheque')], default='EFECTIVO', max_length=20)),
                ('observaciones', models.TextField(blank=True, null=True)),
                ('creado_en', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Pago de Préstamo',
                'verbose_name_plural': 'Pagos de Préstamos',
                'db_table': 'PAGO_PRESTAMO',
                'ordering': ['-fecha_pago'],
            },
        ),
        migrations.CreateModel(
            name='PeriodoDividendo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('año', models.IntegerField(unique=True, validators=[django.core.validators.MinValueValidator(2000), django.core.validators.MaxValueValidator(2100)])),
                ('fecha_inicio', models.DateField()),
                ('fecha_fin', models.DateField()),
                ('total_intereses_generados', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('total_distribuido', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('fecha_distribucion', models.DateField(blank=True, null=True)),
                ('estado', models.CharField(choices=[('ABIERTO', 'Abierto'), ('CERRADO', 'Cerrado'), ('DISTRIBUIDO', 'Distribuido')], db_index=True, default='ABIERTO', max_length=20)),
                ('fecha_cierre', models.DateField(blank=True, null=True)),
                ('creado_en', models.DateTimeField(auto_now_add=True)),
                ('actualizado_en', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Período de Dividendo',
                'verbose_name_plural': 'Períodos de Dividendos',
                'db_table': 'PERIODO_DIVIDENDO',
                'ordering': ['-año'],
            },
        ),
        migrations.CreateModel(
            name='Prestamo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_prestamo', models.CharField(db_index=True, max_length=20, unique=True)),
                ('monto_solicitado', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('monto_aprobado', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('tasa_interes', models.DecimalField(decimal_places=2, help_text='Tasa de interés anual', max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('plazo_meses', models.IntegerField(help_text='Plazo en meses', validators=[django.core.validators.MinValueValidator(1)])),
                ('cuota_mensual', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('total_a_pagar', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('saldo_pendiente', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('fecha_solicitud', models.DateField(default=django.utils.timezone.now)),
                ('fecha_aprobacion', models.DateField(blank=True, null=True)),
                ('fecha_desembolso', models.DateField(blank=True, null=True)),
                ('fecha_primer_pago', models.DateField(blank=True, null=True)),
                ('estado', models.CharField(choices=[('SOLICITADO', 'Solicitado'), ('EN_REVISION', 'En Revisión'), ('APROBADO', 'Aprobado'), ('RECHAZADO', 'Rechazado'), ('DESEMBOLSADO', 'Desembolsado'), ('EN_PAGO', 'En Pago'), ('PAGADO', 'Pagado'), ('VENCIDO', 'Vencido'), ('CANCELADO', 'Cancelado')], db_index=True, default='SOLICITADO', max_length=20)),
                ('deducir_por_planilla', models.BooleanField(default=False)),
                ('numero_planilla', models.CharField(blank=True, max_length=50, null=True)),
                ('constancia_trabajo', models.FileField(blank=True, null=True, upload_to='prestamos/constancias/')),
                ('observaciones', models.TextField(blank=True, null=True)),
                ('creado_en', models.DateTimeField(auto_now_add=True)),
                ('actualizado_en', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Préstamo',
                'verbose_name_plural': 'Préstamos',
                'db_table': 'PRESTAMO',
                'ordering': ['-fecha_solicitud'],
            },
        ),
        migrations.CreateModel(
            name='SolicitudAyudaMutua',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_solicitud', models.CharField(db_index=True, max_length=20, unique=True)),
                ('tipo_ayuda', models.CharField(choices=[('EMERGENCIA_MEDICA', 'Emergencia Médica'), ('FALLECIMIENTO', 'Fallecimiento de Familiar'), ('CALAMIDAD', 'Calamidad Doméstica'), ('OTRA', 'Otra')], db_index=True, max_length=30)),
                ('monto_solicitado', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('monto_aprobado', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('justificacion', models.TextField(help_text='Explique detalladamente el motivo de la solicitud')),
                ('documento_soporte', models.FileField(blank=True, help_text='Documento que respalde la solicitud (recibo médico, acta de defunción, etc.)', null=True, upload_to='solicitudes_ayuda/documentos/')),
                ('estado', models.CharField(choices=[('PENDIENTE', 'Pendiente'), ('EN_REVISION', 'En Revisión'), ('APROBADA', 'Aprobada'), ('RECHAZADA', 'Rechazada'), ('DESEMBOLSADA', 'Desembolsada'), ('CANCELADA', 'Cancelada')], db_index=True, default='PENDIENTE', max_length=20)),
                ('fecha_solicitud', models.DateField(default=django.utils.timezone.now)),
                ('fecha_revision', models.DateField(blank=True, null=True)),
                ('fecha_desembolso', models.DateField(blank=True, null=True)),
                ('comentarios_revision', models.TextField(blank=True, help_text='Comentarios del supervisor sobre la decisión', null=True)),
                ('motivo_rechazo', models.TextField(blank=True, null=True)),
                ('creado_en', models.DateTimeField(auto_now_add=True)),
                ('actualizado_en', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Solicitud de Ayuda Mutua',
                'verbose_name_plural': 'Solicitudes de Ayuda Mutua',
                'db_table': 'SOLICITUD_AYUDA_MUTUA',
                'ordering': ['-fecha_solicitud'],
            },
        ),
        migrations.CreateModel(
            name='TipoCuenta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(choices=[('FIJO', 'Ahorro Fijo'), ('VOLUNTARIO', 'Ahorro Voluntario'), ('PERSONAL', 'Ahorro Personal (Retirable)')], max_length=20, unique=True)),
                ('nombre', models.CharField(max_length=100)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('tasa_interes_anual', models.DecimalField(decimal_places=2, default=Decimal('5.00'), help_text='Tasa de interés anual en porcentaje', max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('periodicidad_capitalizacion', models.CharField(choices=[('MENSUAL', 'Mensual'), ('TRIMESTRAL', 'Trimestral'), ('SEMESTRAL', 'Semestral'), ('ANUAL', 'Anual')], default='MENSUAL', help_text='Periodicidad con la que se capitaliza el interés', max_length=20)),
                ('monto_minimo', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('es_retirable', models.BooleanField(default=False)),
                ('requiere_deduccion_planilla', models.BooleanField(default=False)),
                ('activo', models.BooleanField(default=True)),
                ('creado_en', models.DateTimeField(auto_now_add=True)),
                ('actualizado_en', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Tipo de Cuenta',
                'verbose_name_plural': 'Tipos de Cuenta',
                'db_table': 'TIPO_CUENTA',
            },
        ),
        migrations.CreateModel(
            name='TipoPrestamo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(choices=[('PERSONAL', 'Préstamo Personal'), ('EMERGENCIA', 'Préstamo de Emergencia')], max_length=20, unique=True)),
                ('nombre', models.CharField(max_length=100)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('tasa_interes_anual', models.DecimalField(decimal_places=2, default=Decimal('15.00'), help_text='Tasa de interés anual en porcentaje', max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('multiplicador_ahorro', models.DecimalField(decimal_places=2, default=Decimal('3.00'), help_text='Múltiplo del ahorro fijo para préstamo sin garantes', max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('plazo_minimo_meses', models.IntegerField(default=6, validators=[django.core.validators.MinValueValidator(1)])),
                ('plazo_maximo_meses', models.IntegerField(default=24, validators=[django.core.validators.MinValueValidator(1)])),
                ('requiere_garantes', models.BooleanField(default=False)),
                ('cantidad_garantes', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('activo', models.BooleanField(default=True)),
                ('creado_en', models.DateTimeField(auto_now_add=True)),
                ('actualizado_en', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Tipo de Préstamo',
                'verbose_name_plural': 'Tipos de Préstamo',
                'db_table': 'TIPO_PRESTAMO',
            },
        ),
        migrations.CreateModel(
            name='Transaccion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_transaccion', models.CharField(choices=[('DEPOSITO', 'Depósito'), ('RETIRO', 'Retiro'), ('INTERES', 'Interés Generado'), ('PAGO_PRESTAMO', 'Pago de Préstamo'), ('DESEMBOLSO_PRESTAMO', 'Desembolso de Préstamo'), ('DIVIDENDO', 'Dividendo'), ('AJUSTE', 'Ajuste'), ('REVERSO', 'Reverso')], db_index=True, max_length=20)),
                ('monto', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('saldo_anterior', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('saldo_nuevo', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('descripcion', models.TextField()),
                ('numero_recibo', models.CharField(blank=True, db_index=True, max_length=20, null=True)),
                ('fecha_transaccion', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('creado_en', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Transacción',
                'verbose_name_plural': 'Transacciones',
                'db_table': 'TRANSACCION',
                'ordering': ['-fecha_transaccion'],
            },
        ),
    ]
